# https://docs.github.com/ja/actions/deployment/deploying-to-your-cloud-provider/deploying-to-amazon-elastic-container-service
name: deploy-fargate

on: workflow_dispatch
env:
  AWS_REGION: "ap-northeast-1"
  ROLE_NAME: "github-actions-role"
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECS_SERVICE: "app_api_service"
  ECS_CLUSTER: "ecs-cluster"
  # https://github.com/aws-actions/amazon-ecs-deploy-task-definition#task-definition-file
  CONTAINER_NAME: "app_api"
  TASK_DEFINITION_FAMILY: "app_api_task"
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  push-ecr:
    name: push-ecr
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build-image.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ env.ROLE_NAME }}
          role-session-name: GitHubActionsDeployFargate
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          image_uri=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker build -t $image_uri ./terraform/ecr/app --platform linux/amd64
          docker push $image_uri
          echo "image=$image_uri" >> $GITHUB_OUTPUT

  deploy-ecs:
    name: deploy-ecs
    needs: push-ecr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ env.ROLE_NAME }}
          role-session-name: GitHubActionsDeployFargate
          aws-region: ${{ env.AWS_REGION }}

      - name: Create task-definition.json
        id: create-task-def
        run: |
          task_definition_json=$(mktemp)
          aws ecs describe-task-definition \
            --task-definition ${{ env.TASK_DEFINITION_FAMILY }} \
            --query taskDefinition >> $task_definition_json
          echo "task_definition_json=$task_definition_json" >> "$GITHUB_OUTPUT"
          cat $task_definition_json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.create-task-def.outputs.task_definition_json }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ needs.push-ecr.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
